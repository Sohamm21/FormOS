Using the createElement method to create the HTML element specified by the tagname.
Example: const newDiv = document.createElement("div");

setting the attribute of the element created use the setAttribute function

appendChild

setAtrribute(key, value)

blur event: the blur event fires when an element loses its focus. 


index.html
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Form Generator</title>
    <link rel="stylesheet" href="/index.css">
</head>

<body>
    <div>
        <h1 id="form-title">Untitled Form</h1>
        <button id="edit-form-title">Edit</button>
        
        <form id="dynamicForm">
            <div class="input-field" id="input-container"></div>
            <br />
            <label for="inputType">Select the input type: </label>
            <select id="inputType" name="inputType">
                <option value="text">Text</option>
                <option value="textarea">Textarea</option>
                <option value="select">Dropdown</option>
                <option value="checkbox">Checkbox</option>
                <option value="radio">Radio Button</option>
            </select>
            <button class="removeField">Remove Input</button>
        </form>
        <button id="addField">Add Input</button>
    </div>


    <script src="/index.js"></script>
</body>

</html>


index.js
// Question for the input field
function addQuestionLabel(text, elementType, className, blurCallback) {
    var question = document.createElement(elementType);
    question.textContent = text;
    question.className = className;

    question.addEventListener("click", function () {
        var inputElement = document.createElement("input");
        inputElement.type = "text";
        inputElement.value = question.textContent;
        question.innerHTML = "";
        question.appendChild(inputElement);

        inputElement.addEventListener("blur", function () {
            var updatedText = inputElement.value;
            question.removeChild(inputElement);
            question.textContent = updatedText;
            if (question.textContent == "") {
                alert("Please fill the required field");
                question.textContent = "Write Something Here";
            }
            if (blurCallback) {
                blurCallback(updatedText);
            }
        });
        inputElement.focus();
    });

    return question;
}

// Adding new input field
document.getElementById("addField").addEventListener("click", function () {

    var inputContainer = document.getElementById("input-container");

    var inputWrapper = document.createElement("div");
    inputWrapper.className = "input-wrapper";

    var questionLabel = addQuestionLabel("Write Something Here", "h4", "question-label");
    inputWrapper.appendChild(questionLabel);
    
    var inputType = document.getElementById("inputType");
    var value = inputType.value;

    if (value != "select" && value != "textarea") {
        var input = document.createElement("input");
        input.type = value;
        input.className = "form-control";

        input.addEventListener("keydown", function (event) {
            if (event.keyCode === 13) {
                event.preventDefault(); // Prevent form submission
            }
        });
    }

    if (value === "select") {
        var input = document.createElement("select");
        input.id = "dropdown";
        input.name = "dropdown";
        input.className = "selection";

        var addOption = document.createElement("button");
        addOption.textContent = "Add Option";

        var optionInput = document.createElement("input");
        optionInput.type = "text";
        optionInput.placeholder = "Enter the option value";

        addOption.addEventListener("click", function (event) {
            event.preventDefault();

            var optionValue = optionInput.value.trim();
            inputWrapper.appendChild(addOption);
            inputWrapper.appendChild(optionInput);

            if (optionValue !== "") {
                var option = document.createElement("option");
                option.value = optionValue.toLowerCase();
                option.text = optionValue;
                input.appendChild(option);
                optionInput.value = "";
            }
        });
    }
    console.log(value); 
    if (value === "textarea") {
        var textarea = document.createElement("textarea");
        textarea.style.resize = "none";
        textarea.style.overflow = "hidden";
        textarea.style.height = "100px";
        textarea.addEventListener("input", function () {
            textarea.style.height = "auto";
            textarea.style.height = (textarea.scrollHeight) + "px";
        });
        inputWrapper.appendChild(textarea);
    }

    var removeButton = document.createElement("button");
    removeButton.textContent = "Remove Input";
    removeButton.className = "removeField";
    
    if(value!="textarea"){
        inputWrapper.appendChild(input);
    }
    if (value == "select") {
        inputWrapper.appendChild(addOption);
    }
    inputWrapper.appendChild(removeButton);
    inputContainer.appendChild(inputWrapper);

    removeButton.addEventListener("click", function () {
        inputWrapper.remove();
    });
});
